"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[468],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},l="Command Line Tool",i={unversionedId:"cli",id:"cli",title:"Command Line Tool",description:"The Color Doctor CLI is your tool to analysis colors and generate report (html) or separated comma (csv) files.",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/docs/cli",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/docs/intro"},next:{title:"Contribution",permalink:"/docs/contributors"}},s={},p=[{value:"Commands",id:"commands",level:2},{value:"find-colors",id:"find-colors",level:3}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"command-line-tool"},"Command Line Tool"),(0,a.kt)("p",null,"The Color Doctor CLI is your tool to analysis colors and generate report (html) or separated comma (csv) files."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"We are always looking for contributors to help us make this library even better! ")),(0,a.kt)("h2",{id:"commands"},"Commands"),(0,a.kt)("h3",{id:"find-colors"},"find-colors"),(0,a.kt)("p",null,"This is the main and unique (until now) command to find and generate report. In this first version I think it's fine and delivering a great value for who is using this project."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"color-doctor find-colors [SEARCH_SHELL_PATTERN] -f report\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Command"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Values"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"--format \\ ",(0,a.kt)("strong",{parentName:"td"},"-f")),(0,a.kt)("td",{parentName:"tr",align:null},"report"),(0,a.kt)("td",{parentName:"tr",align:null},"report ","|"," csv"),(0,a.kt)("td",{parentName:"tr",align:null},"Export format type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"--help \\ ",(0,a.kt)("strong",{parentName:"td"},"-h")),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Show find-colors options")))),(0,a.kt)("p",null,"You can use ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"SEARCH_SHELL_PATTERN"))," or omit it to use actual terminal folder and the folowing formats:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"css"),(0,a.kt)("li",{parentName:"ul"},"scss"),(0,a.kt)("li",{parentName:"ul"},"jsx"),(0,a.kt)("li",{parentName:"ul"},"js"),(0,a.kt)("li",{parentName:"ul"},"ts"),(0,a.kt)("li",{parentName:"ul"},"tsx")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"By default, we ignore ",(0,a.kt)("inlineCode",{parentName:"p"},"node_modules")," in any case for performance and convenience.")),(0,a.kt)("p",null,"Let me show you an example of this pattern:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"../project-folder/**/*.(js|css|jsx|ts|tsx|scss)\n")),(0,a.kt)("p",null,"For more information about this pattern you can check ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/isaacs/node-glob#readme"},"node-glob")," library."))}u.isMDXComponent=!0}}]);